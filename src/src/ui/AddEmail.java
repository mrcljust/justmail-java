package src.ui;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import src.JustMail;

public class AddEmail extends javax.swing.JDialog
{

    /**
     * Creates new form MainFrame
     */
    public boolean usePop = true;
    public boolean didSubmit = false;
    public String protocolCur = "POP";

    public AddEmail()
    {
        super((JFrame) null, "E-Mail Konto hinzufügen - justMail", true);
        Image image = Toolkit.getDefaultToolkit().getImage("src/img/icon.png");
        this.setIconImage(image);
        initComponents();

        this.setLocationRelativeTo(null);
        rbPOP.setSelected(true);
        txtPort.setDocument(new JTextFieldLimit(4));
        txtSmtpPort.setDocument(new JTextFieldLimit(4));
        this.setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtServer = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        rbPOP = new javax.swing.JRadioButton();
        rbIMAP = new javax.swing.JRadioButton();
        labelServer = new javax.swing.JLabel();
        labelPort = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        labelEmail = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        txtSmtpServer = new javax.swing.JTextField();
        txtSmtpPort = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtShowName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        cbReceiveAtProgramStart = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jButton1.setText("Konto hinzufügen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Protokoll");

        buttonGroup1.add(rbPOP);
        rbPOP.setText("POP");
        rbPOP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbPOPItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rbIMAP);
        rbIMAP.setText("IMAP");

        labelServer.setText("POP-Server:");

        labelPort.setText("POP-Port:");

        labelEmail.setText("E-Mail:");

        labelPassword.setText("Passwort:");

        jLabel3.setText("SMTP-Server:");

        jLabel4.setText("SMTP-Port:");

        jLabel2.setText("Anzeigename:");

        cbReceiveAtProgramStart.setSelected(true);
        cbReceiveAtProgramStart.setText("<html>Bei Programmstart automatisch<br>auf neue E-Mails prüfen</html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelServer)
                            .addComponent(labelPort)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(labelEmail)
                            .addComponent(labelPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtShowName, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSmtpPort, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSmtpServer, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPort, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(txtServer, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbReceiveAtProgramStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbPOP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbIMAP)
                        .addGap(67, 67, 67))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtEmail, txtPort, txtServer, txtSmtpPort, txtSmtpServer});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rbPOP)
                    .addComponent(rbIMAP))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelServer, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSmtpServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSmtpPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtShowName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbReceiveAtProgramStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, labelEmail, labelPassword, labelPort, labelServer, txtEmail, txtPort, txtServer, txtShowName});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel4, txtSmtpPort});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel3, txtSmtpServer});

        txtPort.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        boolean hasAnySelection = rbPOP.isSelected() || rbIMAP.isSelected();
        String protokoll;
        if (rbPOP.isSelected())
        {
            protokoll = "POP";
        }
        else
        {
            protokoll = "IMAP";
        }

        String server = txtServer.getText();
        String port = txtPort.getText();
        String smtpserver = txtSmtpServer.getText();
        String smtpport = txtSmtpPort.getText();
        String email = txtEmail.getText();
        String name = txtShowName.getText();
        String password = String.valueOf(txtPassword.getPassword());

        if (hasAnySelection && !name.trim().isEmpty() && !server.trim().isEmpty() && !port.trim().isEmpty() && !smtpserver.trim().isEmpty() && !smtpport.trim().isEmpty() && !email.trim().isEmpty() && email.contains("@") && email.contains(".") && !password.trim().isEmpty())
        {
            //alles gegeben
            File dirToCreate0 = new File(System.getProperty("user.dir") + "/mailaccounts/");
            File dirToCreate = new File(System.getProperty("user.dir") + "/mailaccounts/" + email + "/");
            File dirToCreate1 = new File(System.getProperty("user.dir") + "/mailaccounts/" + email + "/sent/");
            File dirToCreate2 = new File(System.getProperty("user.dir") + "/mailaccounts/" + email + "/inbox/");
            File dirToCreate3 = new File(System.getProperty("user.dir") + "/mailaccounts/" + email + "/trash/");
            File dirToCreate4 = new File(System.getProperty("user.dir") + "/mailaccounts/" + email + "/tmp/");
            File dirToCreate5 = new File(System.getProperty("user.dir") + "/contacts/");
            File dirToCreate6 = new File(System.getProperty("user.dir") + "/contacts/folders/");
            File dirToCreate7 = new File(System.getProperty("user.dir") + "/mailaccounts/" + email + "/spam/");

            if (dirToCreate.exists())
            {
                JOptionPane.showMessageDialog(null, "Die E-Mail-Adresse " + email + " ist bereits im E-Mail-Client eingetragen", "Meldung", JOptionPane.ERROR_MESSAGE);
                return;
            }

            dirToCreate0.mkdir();
            dirToCreate5.mkdir();
            dirToCreate6.mkdir();
            dirToCreate.mkdir();
            dirToCreate1.mkdir();
            dirToCreate2.mkdir();
            dirToCreate3.mkdir();
            dirToCreate4.mkdir();
            dirToCreate7.mkdir();
            CConfig cfg = new CConfig();
            try
            {
                cfg.createConfig(System.getProperty("user.dir") + "/mailaccounts/" + email + "/", protokoll, server, port, smtpserver, smtpport, name, email, password, cbReceiveAtProgramStart.isSelected());
            }
            catch (Exception ex)
            {
                Logger.getLogger(AddEmail.class.getName()).log(Level.SEVERE, null, ex);
            }

            didSubmit = true;
            File dirToList = new File(System.getProperty("user.dir") + "/mailaccounts/");
            int mailCount = dirToList.list().length;
            if (mailCount > 1)
            {
                JustMail.mainForm.mainMailPnl.refreshTree();
                JustMail.mainForm.listMailaccountsToCombobox();
            }
            this.dispose();
        }
        else
        {
            if (!hasAnySelection)
            {
                JOptionPane.showMessageDialog(null, "Bitte wählen Sie IMAP oder POP", "Meldung", JOptionPane.ERROR_MESSAGE);
            }

            if (server.trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Bitte tragen Sie einen " + protocolCur + "-Server ein", "Meldung", JOptionPane.ERROR_MESSAGE);
            }

            if (name.trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Bitte tragen Sie einen Anzeigenamen ein", "Meldung", JOptionPane.ERROR_MESSAGE);
            }

            if (port.trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Bitte tragen Sie einen " + protocolCur + "-Port ein", "Meldung", JOptionPane.ERROR_MESSAGE);
            }

            if (smtpserver.trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Bitte tragen Sie einen SMTP-Server ein", "Meldung", JOptionPane.ERROR_MESSAGE);
            }

            if (smtpport.trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Bitte tragen Sie einen SMTP-Port ein", "Meldung", JOptionPane.ERROR_MESSAGE);
            }

            if (email.trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Bitte tragen Sie eine E-Mail-Adresse ein", "Meldung", JOptionPane.ERROR_MESSAGE);
            }
            else if (!email.contains("@"))
            {
                JOptionPane.showMessageDialog(null, "Bitte tragen Sie eine gültige E-Mail-Adresse ein", "Meldung", JOptionPane.ERROR_MESSAGE);
            }
            else if (!email.contains("."))
            {
                JOptionPane.showMessageDialog(null, "Bitte tragen Sie eine gültige E-Mail-Adresse ein", "Meldung", JOptionPane.ERROR_MESSAGE);
            }

            if (password.trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Bitte tragen Sie ein Passwort ein", "Meldung", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void rbPOPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbPOPItemStateChanged
        if (rbPOP.isSelected())
        {
            usePop = true;
            protocolCur = "POP";
            labelServer.setText("POP-Server:");
            labelPort.setText("POP-Port:");
        }
        else
        {
            usePop = false;
            protocolCur = "IMAP";
            labelServer.setText("IMAP-Server:");
            labelPort.setText("IMAP-Port:");
        }
    }//GEN-LAST:event_rbPOPItemStateChanged

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (didSubmit = true)
        {

        }
        else
        {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbReceiveAtProgramStart;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelPort;
    private javax.swing.JLabel labelServer;
    private javax.swing.JRadioButton rbIMAP;
    private javax.swing.JRadioButton rbPOP;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtServer;
    private javax.swing.JTextField txtShowName;
    private javax.swing.JTextField txtSmtpPort;
    private javax.swing.JTextField txtSmtpServer;
    // End of variables declaration//GEN-END:variables
}
